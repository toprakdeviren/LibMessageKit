#ifndef ERROR_CODES_H
#define ERROR_CODES_H

typedef enum {
    ERROR_CATEGORY_GENERAL = 0,
    ERROR_CATEGORY_NETWORK = 1000,
    ERROR_CATEGORY_DATABASE = 2000,
    ERROR_CATEGORY_AUTH = 3000
} ErrorCategory;

typedef enum {
    ERROR_NONE = ERROR_CATEGORY_GENERAL,
    ERROR_UNKNOWN,
    ERROR_MEMORY_ALLOCATION,
    ERROR_INVALID_PARAMS,
    ERROR_ALREADY_INITIALIZED,
    ERROR_INVALID_STORAGE_PATH,
    ERROR_INVALID_DATABASE_FILENAME
} GeneralErrorCode;

typedef enum {
    NETWORK_ERROR_NONE = ERROR_CATEGORY_NETWORK,
    NETWORK_ERROR_CONNECTION_FAILED,
    NETWORK_ERROR_TIMEOUT
} NetworkErrorCode;

typedef enum {
    DB_ERROR_NONE = ERROR_CATEGORY_DATABASE,
    DB_ERROR_INITIALIZATION,
    DB_ERROR_QUERY,
    DB_ERROR_SCHEMA
} DatabaseErrorCode;

typedef enum {
    AUTH_ERROR_NONE = ERROR_CATEGORY_AUTH,
    AUTH_ERROR_UNAUTHORIZED,
    AUTH_ERROR_INVALID_TOKEN
} AuthErrorCode;

typedef int ErrorCode;

#define MAKE_ERROR(category, code) ((category) | (code))

#endif // ERROR_CODES_H